{
    "swagger": "2.0",
    "info": {
        "title": serverlessrepo,
        "description": ,
        "version": 0.0.1
    },
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json;charset=utf-8"
    ],
    "produces": [
        "application/json;charset=utf-8"
    ],
    "paths": {
        "/resource/{id}": {
            "get": {
                "summary": "Retrieve a resource by ID",
                "description": "Placeholder for GET operation to retrieve a resource by ID",
                "responses": {
                "200": {
                    "description": "Successful response"
                },
                "404": {
                    "$ref": "#/responses/404"
                },
                "500": {
                    "$ref": "#/responses/500"
                    }
                }
            },
            "put": {
                "summary": "Update a resource by ID",
                "description": "Placeholder for PUT operation to update a resource by ID",
                "responses": {
                    "200": {
                        "description": "Resource updated successfully"
                    },
                "404": {
                    "$ref": "#/responses/404"
                },
                "400": {
                    "$ref": "#/responses/400"
                },
                "500": {
                    "$ref": "#/responses/500"
                    }
                }
            },
            "post": {
                "summary": "Create a new resource",
                "description": "Placeholder for POST operation to create a new resource",
                "responses": {
                    "201": {
                        "description": "Resource created successfully"
                    },
                "400": {
                    "$ref": "#/responses/400"
                },
                "500": {
                    "$ref": "#/responses/500"
                    }
                }
            },
            "delete": {
                "summary": "Delete a resource by ID",
                "description": "Placeholder for DELETE operation to delete a resource by ID",
                "responses": {
                "204": {
                    "description": "Resource deleted successfully"
                },
                "404": {
                    "$ref": "#/responses/404"
                },
                "500": {
                    "$ref": "#/responses/500"
                    }
                }
            },
            "patch": {
                "summary": "Partially update a resource by ID",
                "description": "Placeholder for PATCH operation to partially update a resource by ID",
                "responses": {
                "200": {
                    "description": "Resource partially updated successfully"
                },
                "404": {
                    "$ref": "#/responses/404"
                },
                "400": {
                    "$ref": "#/responses/400"
                },
                "500": {
                    "$ref": "#/responses/500"
                    }
                }
            }      
        }  
    },
    "responses": {
        "400": {
            "description": "Bad Request",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        },
        "401": {
            "description": "Unauthorized",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        },
        "403": {
            "description": "Forbidden",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        },
        "404": {
            "description": "Not Found",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        },
        "405": {
            "description": "Method Not allowed",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        },
        "409": {
            "description": "Conflict",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        },
        "500": {
            "description": "Internal Server Error",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        }
    }
}